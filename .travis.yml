# vim: nospell

# language: c
language: minimal
dist: xenial
# dist: trusty
# dist: precise
# sudo: required

cache:
  timeout: 600
  directories:
    - $HOME/.stack
    # - $HOME/llvm
    # - .stack-work/install

addons:
  apt:
    sources: &apt_sources
      - hvr-ghc
      - ubuntu-toolchain-r-test
    packages: &apt_packages
      - dpkg
      - gcc-8
      - g++-8
      - libgmp-dev
      - happy-1.19.5
      - alex-3.1.7

matrix:
  fast_finish: true
  include:
    - env: GHC=8.6.1 LLVM=8.0.0 CUDA=10.1.105-1
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-xenial-8
          packages:
            - *apt_packages
            - libtinfo-dev
            - llvm-8-dev

before_install:
  - unset CC
  - echo ${GHC}
  - echo ${LLVM}

  - export PATH=/opt/alex/3.1.7/bin:${PATH}
  - export PATH=/opt/happy/1.19.5/bin:${PATH}

  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8

  # GHC-8.4+ require libffi7
  # - ls -d $(stack path --compiler-bin)/../lib/ghc-*/rts/
  # - export LD_LIBRARY_PATH=$(ls -d $(dirname $(stack path --compiler-bin))/lib/ghc-*/rts):$LD_LIBRARY_PATH
  # - echo ${LD_LIBRARY_PATH}
  # - sudo apt-add-repository "deb http://deb.debian.org/debian experimental main"
  # - sudo apt-get update
  # - sudo apt-get install -y --allow-unauthenticated libffi7
  - echo "deb http://deb.debian.org/debian experimental main" | sudo tee -a /etc/apt/sources.list
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key 0x7638D0442B90D010 0x8B48AD6246925553 0x04EE7237B7D453EC
  - sudo apt-get install debian-archive-keyring
  - sudo apt-get update
  - sudo apt-get -t experimental install libffi7

  # Install CUDA
  - source .travis/install-cuda-xenial.sh
  # - source .travis/install-cuda-trusty.sh
  # - ls -l /usr/local/cuda/lib ; true

  - dpkg -c cuda-repo-ubuntu1604_${CUDA}_amd64.deb
  - apt-cache search cuda

  # Fetch stack
  # - mkdir -p $HOME/bin
  # - export PATH=$HOME/bin:$PATH

  # - travis_retry curl -sSL https://get.haskellstack.org/ | sh
  # - travis_retry curl -L "https://www.stackage.org/stack/linux-x86_64" | gunzip | tar -x
  # - mv stack-*/stack $HOME/bin

  # - ln -s stack-${GHC%.*}.yaml stack.yaml

  - source .travis/install-stack.sh
  # - source .travis/update-ghc-settings.sh
  # - travis_retry stack setup --no-terminal
  # - travis_retry stack setup --upgrade-cabal

  # Try to install LLVM manually
  # - export LLVM_HOME=${HOME}/llvm-${LLVM}
  # - export PATH=${LLVM_HOME}/bin:${PATH}
  # - export LD_LIBRARY_PATH=${LLVM_HOME}/lib:${LD_LIBRARY_PATH}
  # - mkdir -p ${LLVM_HOME}
  # - travis_retry curl -L "http://llvm.org/releases/${LLVM}/clang+llvm-${LLVM}-x86_64-linux-gnu-ubuntu-14.04.tar.xz" | unxz | tar -x -C ${LLVM_HOME} --strip-components 1
  # - source .travis/install-llvm-trusty.sh
  # - source .travis/update-ghc-settings.sh

  # - travis_retry stack install c2hs

install:
  - which -a gcc; true
  - which -a g++; true
  - which -a stack; true
  - which -a cabal; true
  - which -a ghc; true
  - which -a opt; true
  - which -a llc; true
  - which -a alex; true
  - which -a happy; true
  - which -a c2hs; true
  - echo "$(stack exec ghc -- --version) [$(stack exec ghc -- --print-project-git-commit-id 2> /dev/null || echo '?')]"; true
  - stack --version; true
  - cabal --version; true
  - alex --version; true
  - happy --version; true
  - opt --version; true
  - llc --version; true
  - nvcc --version; true
  - gcc --version; true
  - g++ --version; true
  - c2hs --version; true
  - echo $PATH
  - pkg-config --list-all; true
  - pkg-config --cflags cuda-10.1; true
  - pkg-config --libs cuda-10.1; true

  # - mkdir -p $HOME/bin
  # - export PATH=$HOME/bin:$PATH
  # - ln -s /usr/bin/g++-4.8 $HOME/bin/g++
  # - ln -s /usr/bin/gcc-4.8 $HOME/bin/gcc

  # - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 20
  # - update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 20

  # - sed -i"" -e "s,/usr/bin/gcc,/usr/bin/gcc-4.8," $(stack path --ghc-paths 2>/dev/null)/ghc-${GHC}/lib/ghc-${GHC}/settings
  # - stack install llvm-general --no-terminal
  # - stack test llvm-hs

script:
  - travis_retry stack build --no-terminal --only-dependencies
  - travis_retry stack build --no-terminal
  - stack exec travis-test

after_failure:
  - df -h
  - du -hs .

  - ls -R /usr
  - locate libcufft

