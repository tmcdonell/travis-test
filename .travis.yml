# vim: nospell
# # language: c
# language: generic
# # sudo: required
# # dist: trusty
# dist: precise

language: generic
dist: precise

cache:
  timeout: 600
  directories:
    - $HOME/.stack
    - $HOME/llvm
    - .stack-work/install

addons:
  apt:
    sources: &apt_sources
      - hvr-ghc
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise
      - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main'
        key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

    packages: &apt_packages
      - nvidia-cuda-toolkit
      - freeglut3-dev
      - g++-5
      - libgmp-dev
      - happy-1.19.5
      - alex-3.1.7
      - libfftw3-dev
      - llvm-4.0-dev

matrix:
  include:
    - env: GHC=7.8.4 CABAL=1.18 LLVM=4.0.0
      compiler: "GHC 7.8"
      addons:
        apt:
          sources: *apt_sources
          packages:
            - *apt_packages
            - cabal-install-1.18

    - env: GHC=7.10.3 CABAL=1.22 LLVM=4.0.0
      compiler: "GHC 7.10"
      addons:
        apt:
          sources: *apt_sources
          packages:
            - *apt_packages
            - cabal-install-1.22

    - env: GHC=8.0.2 CABAL=1.24 LLVM=4.0.0
      compiler: "GHC 8.0"
      addons:
        apt:
          sources: *apt_sources
          packages:
            - *apt_packages
            - cabal-install-1.24

  fast_finish: true


# cache:
#   directories:
#     - $HOME/.stack
#     - $HOME/llvm
#     - .stack-work/install

# addons:
#   apt:
#     sources: &apt_sources
#       - hvr-ghc
#       - ubuntu-toolchain-r-test
#       - llvm-toolchain-precise
#       - llvm-toolchain-precise-3.5
#       - llvm-toolchain-precise-3.6
#       - llvm-toolchain-precise-3.7
#       - llvm-toolchain-precise-3.8
#       - llvm-toolchain-precise-3.9
#       # - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main'
#       #   key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'
#       # - llvm-toolchain-precise-4.0
#       - sourceline: 'deb http://apt.llvm.org/precise/ llvm-toolchain-precise-4.0 main'
#         key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

#     packages: &apt_packages
#       - nvidia-cuda-toolkit
#       - g++-4.8
#       - libgmp-dev
#       - happy-1.19.5
#       - alex-3.1.7
#       - libsiloh5-0
#       - libhdf5-openmpi-dev
#       - llvm-4.0-dev

# matrix:
#   include:
#     - env: GHC=7.8.4 CABAL=1.18 LLVM-3.5.2
#       compiler: "GHC 7.8"
#       addons:
#         apt:
#           sources: *apt_sources
#           packages:
#             - *apt_packages
#             - cabal-install-1.18
#             - llvm-3.5-dev
#             - libedit-dev

    # - env: GHC=7.10.3 CABAL=1.22 LLVM=4.0.0
    #   compiler: "GHC 7.10"
    #   addons:
    #     apt:
    #       sources: *apt_sources
    #       packages:
    #         - *apt_packages
    #         - cabal-install-1.22
    #         - llvm-4.0-dev

    # - env: GHC=8.0.2 CABAL=1.24 LLVM=4.0.0
    #   compiler: "GHC 8.0"
    #   addons:
    #     apt:
    #       sources: *apt_sources
    #       packages:
    #         - *apt_packages
    #         - cabal-install-1.24
    #         - llvm-4.0-dev

# compiler:
  # - GHC-7.8.4
  # - GHC-7.10.3
  # - GHC-8.0.2

# env:
#   - FOO="foo"
#   - BAR="bar"

# matrix:
#   fast_finish: true
#   allow_failures:
#     - compiler: GHC-7.8.4
#       env: BAR="bar"

# matrix:
#   include:
#     - env: GHC=7.10.3 CABAL=1.22 LLVM=3.5.2
#       compiler: "GHC 7.10"
#       addons: { apt: { sources: [ hvr-ghc, ubuntu-toolchain-r-test ], packages: [ nvidia-cuda-toolkit, g++-4.8, libgmp-dev, cabal-install-1.22, happy-1.19.5, alex-3.1.7 ] }}

#     - env: GHC=7.10.3 LLVM=3.5.2
#       addons:
#         apt:
#           sources:
#             - hvr-ghc
#             - ubuntu-toolchain-r-test
#           packages:
#             - libgmp-dev              # ghc
#             - libstdc++6              # llvm
#             - cabal-install-1.22
#             # - nvidia-common
#             # - nvidia-current
#             - nvidia-cuda-toolkit
#             # - nvidia-cuda-dev
#             # - llvm-3.6-dev
#             # - llvm-3.5-dev

    # - env: GHC=7.8.4 LLVM=3.4 CUDA=7.0-28
    #   compiler: "#GHC 7.8"
    #   addons:
    #     apt:
    #       sources:
    #         - hvr-ghc
    #       packages:
    #         - ghc-7.8.4
    #         - cabal-install-1.22
    #         - happy-1.19.5
    #         - alex-3.1.4
    #         - nvidia-cuda-toolkit

    # - env: GHC=7.10.3 LLVM=3.5 CUDA=7.0-28
    #   compiler: "#GHC 7.10"
    #   addons:
    #     apt:
    #       sources:
    #         - hvr-ghc
    #         # - llvm-toolchain-precise-3.5
    #         # - ubuntu-toolchain-r-test
    #       packages:
    #         - ghc-7.10.3
    #         - cabal-install-1.22
    #         - happy-1.19.5
    #         - alex-3.1.4
    #         # - llvm-3.5
    #         - nvidia-cuda-toolkit
    #         - nvidia-cuda-dev
    #         - nvidia-opencl-dev
    #         - nvidia-current

# cache:
#   directories:
#     - $HOME/.ghc
#     - $HOME/.cabal/bin
#     - $HOME/.cabal/lib
#     - $HOME/.cabal/share

before_install:
  # - unset CC
  - export PATH=/opt/alex/3.1.7/bin:${PATH}
  - export PATH=/opt/happy/1.19.5/bin:${PATH}
  - export PATH=/opt/cabal/${CABAL}/bin:${PATH}
  # - export PATH=/opt/ghc/${GHC}/bin:${PATH}
  # - export PATH=/usr/lib/llvm-${LLVM}/bin:${PATH}
  # - export PATH=/usr/local/cuda/bin:${PATH}

  # - echo $CC
  # - export GHC=${CC:4}
  # - |
  #     case ${GHC} in
  #       7.8.*)  export LLVM="3.4.2" ;;
  #       7.10.*) export LLVM="3.5.2" ;;
  #       8.0.*)  export LLVM="3.8.1" ;;
  #     esac
  - echo ${GHC}
  - echo ${LLVM}
  - unset CC

  # Fetch stack
  - mkdir $HOME/bin
  - export PATH=$HOME/bin:$PATH
  - travis_retry curl -L "https://www.stackage.org/stack/linux-x86_64" | gunzip | tar -x
  - mv stack-*/stack $HOME/bin
  - ln -s stack-${GHC%.*}.yaml stack.yaml
  - travis_retry stack setup --no-terminal
  # - travis_retry stack setup --upgrade-cabal

  # - |
  #     if [ ${GHC%.*} == 7.8 ]; then
  #       # required to install the 'cuda' package
  #       travis_retry sudo env PATH=$PATH stack setup --upgrade-cabal --allow-different-user --no-terminal
  #       # GCE architecture doesn't have enough space in /tmp to install stack
  #       # locally, so we need to install via apt and then --upgrade-cabal using
  #       # 'sudo'. This fixes the resulting permissions.
  #       sudo chown -R $USER:$USER $HOME/.stack
  #     fi
  # - ls -la $HOME
  # - ls -la $HOME/.stack
  # - ls -la $HOME/.stack/indices
  # - ls -la $HOME/.stack/indices/*
  # - ls -la $HOME/.stack/indices/*/*

  # Install CUDA
  # - source .travis/install-cuda-trusty.sh

  # Try to install LLVM manually
  # - export LLVM_HOME=${HOME}/llvm-${LLVM}
  # - export PATH=${LLVM_HOME}/bin:${PATH}
  # - export LD_LIBRARY_PATH=${LLVM_HOME}/lib:${LD_LIBRARY_PATH}
  # - mkdir -p ${LLVM_HOME}
  # - travis_retry curl -L "http://llvm.org/releases/${LLVM}/clang+llvm-${LLVM}-x86_64-linux-gnu-ubuntu-14.04.tar.xz" | unxz | tar -x -C ${LLVM_HOME} --strip-components 1
  # - source .travis/install-llvm-trusty.sh
  - source .travis/update-ghc-settings.sh

install:
  - which -a gcc; true
  - which -a g++; true
  - which -a stack; true
  - which -a cabal; true
  - which -a ghc; true
  - which -a opt; true
  - which -a llc; true
  - which -a alex; true
  - which -a happy; true
  - echo "$(stack exec ghc -- --version) [$(stack exec ghc -- --print-project-git-commit-id 2> /dev/null || echo '?')]"; true
  - stack --version; true
  - cabal --version; true
  - alex --version; true
  - happy --version; true
  - opt --version; true
  - llc --version; true
  - nvcc --version; true
  - gcc --version; true
  - g++ --version; true

  # - mkdir -p $HOME/bin
  # - export PATH=$HOME/bin:$PATH
  # - ln -s /usr/bin/g++-4.8 $HOME/bin/g++
  # - ln -s /usr/bin/gcc-4.8 $HOME/bin/gcc

  # - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 20
  # - update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 20

  # - sed -i"" -e "s,/usr/bin/gcc,/usr/bin/gcc-4.8," $(stack path --ghc-paths 2>/dev/null)/ghc-${GHC}/lib/ghc-${GHC}/settings
  # - stack install llvm-general --no-terminal

  - travis_retry stack build --no-terminal --only-dependencies

script:
  - travis_retry stack build --no-terminal
  - stack exec travis-test

