# vim: nospell
language: generic
sudo: false
dist: trusty
# dist: precise

cache:
  directories:
    - $HOME/.stack
    - $HOME/llvm

matrix:
  include:
    - env: GHC=7.10.3 CABAL=1.22 LLVM=3.5.2
      compiler: "GHC 7.10"
      addons: { apt: { sources: [ hvr-ghc, ubuntu-toolchain-r-test ], packages: [ nvidia-cuda-toolkit, libstdc++6, g++-4.8, libedit-dev, libgmp-dev, cabal-install-1.22, happy-1.19.5, alex-3.1.7 ] }}

#     - env: GHC=7.10.3 LLVM=3.5.2
#       addons:
#         apt:
#           sources:
#             - hvr-ghc
#             - ubuntu-toolchain-r-test
#           packages:
#             - libgmp-dev              # ghc
#             - libstdc++6              # llvm
#             - cabal-install-1.22
#             # - nvidia-common
#             # - nvidia-current
#             - nvidia-cuda-toolkit
#             # - nvidia-cuda-dev
#             # - llvm-3.6-dev
#             # - llvm-3.5-dev

    # - env: GHC=7.8.4 LLVM=3.4 CUDA=7.0-28
    #   compiler: "#GHC 7.8"
    #   addons:
    #     apt:
    #       sources:
    #         - hvr-ghc
    #       packages:
    #         - ghc-7.8.4
    #         - cabal-install-1.22
    #         - happy-1.19.5
    #         - alex-3.1.4
    #         - nvidia-cuda-toolkit

    # - env: GHC=7.10.3 LLVM=3.5 CUDA=7.0-28
    #   compiler: "#GHC 7.10"
    #   addons:
    #     apt:
    #       sources:
    #         - hvr-ghc
    #         # - llvm-toolchain-precise-3.5
    #         # - ubuntu-toolchain-r-test
    #       packages:
    #         - ghc-7.10.3
    #         - cabal-install-1.22
    #         - happy-1.19.5
    #         - alex-3.1.4
    #         # - llvm-3.5
    #         - nvidia-cuda-toolkit
    #         - nvidia-cuda-dev
    #         - nvidia-opencl-dev
    #         - nvidia-current

# cache:
#   directories:
#     - $HOME/.ghc
#     - $HOME/.cabal/bin
#     - $HOME/.cabal/lib
#     - $HOME/.cabal/share

before_install:
  # - unset CC
  - export PATH=/opt/alex/3.1.4/bin:${PATH}
  - export PATH=/opt/happy/1.19.5/bin:${PATH}
  - export PATH=/opt/cabal/${CABAL}/bin:${PATH}
  # - export PATH=/opt/ghc/${GHC}/bin:${PATH}
  # - export PATH=/usr/lib/llvm-${LLVM}/bin:${PATH}
  # - export PATH=/usr/local/cuda/bin:${PATH}

  # Fetch stack
  - mkdir $HOME/bin
  - export PATH=$HOME/bin:$PATH
  - travis_retry curl -L "https://www.stackage.org/stack/linux-x86_64" | gunzip | tar -x
  - mv stack-*/stack $HOME/bin
  - ln -s stack-${GHC%.*}.yaml stack.yaml
  - travis_retry stack setup --no-terminal

  # - |
  #     if [ ${GHC%.*} == 7.8 ]; then
  #       # required to install the 'cuda' package
  #       travis_retry sudo env PATH=$PATH stack setup --upgrade-cabal --allow-different-user --no-terminal
  #       # GCE architecture doesn't have enough space in /tmp to install stack
  #       # locally, so we need to install via apt and then --upgrade-cabal using
  #       # 'sudo'. This fixes the resulting permissions.
  #       sudo chown -R $USER:$USER $HOME/.stack
  #     fi
  # - ls -la $HOME
  # - ls -la $HOME/.stack
  # - ls -la $HOME/.stack/indices
  # - ls -la $HOME/.stack/indices/*
  # - ls -la $HOME/.stack/indices/*/*

  # Install CUDA
  # - source .travis/install-cuda-trusty.sh

  # Try to install LLVM manually
  # - export LLVM_HOME=${HOME}/llvm-${LLVM}
  # - export PATH=${LLVM_HOME}/bin:${PATH}
  # - export LD_LIBRARY_PATH=${LLVM_HOME}/lib:${LD_LIBRARY_PATH}
  # - mkdir -p ${LLVM_HOME}
  # - travis_retry curl -L "http://llvm.org/releases/${LLVM}/clang+llvm-${LLVM}-x86_64-linux-gnu-ubuntu-14.04.tar.xz" | unxz | tar -x -C ${LLVM_HOME} --strip-components 1
  - source .travis/install-llvm-trusty.sh

install:
  - which -a gcc
  - which -a g++
  - which -a stack; true
  - which -a cabal; true
  - which -a ghc; true
  - which -a opt; true
  - which -a llc; true
  - which -a alex; true
  - which -a happy; true
  - echo "$(stack exec ghc -- --version) [$(stack exec ghc -- --print-project-git-commit-id 2> /dev/null || echo '?')]"; true
  - stack --version; true
  - cabal --version; true
  - alex --version; true
  - happy --version; true
  - opt --version; true
  - llc --version; true
  - nvcc --version; true

  - CC=gcc-4.8 CXX=g++-4.8 stack install llvm-general

script:
  - stack build --no-terminal
  - stack exec travis-test

